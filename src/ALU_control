library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity ALU_control is
	generic(
		WSIZE : natural
	)
	port(
		instruction : in  std_logic_vector((WSIZE-1) downto 0);
		ALU_opcode  : out std_logic_vector(3 downto 0)
	);
end entity ALU_control;

architecture ALU_control_arch of ALU_control is
	type OPERATION_TYPE is (OP_AND, OP_OR, OP_ADD, OP_SUB);
	signal operation : OPERATION_TYPE;
	
	alias opcode : std_logic_vector(6 downto 0) is instruction(6 downto 0);
	alias funct3 : std_logic_vector(2 downto 0) is instruction(14 downto 12);
	alias funct7 : std_logic_vector(6 downto 0) is instruction(31 downto 25);	
begin
	operation <= to_integer(unsigned(instruction))
	alu_decode : process(instruction) is
	begin
		case opcode is 
		when OPCODE_OP_IMM =>
			case funct3 is
			when FUNCT3_ADDI =>
				
			
		when OPCODE_OP =>
			
		end case;

	end process alu_decode; 
	
end architecture ALU_control_arch;
