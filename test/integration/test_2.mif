-- Copyright (C) 1991-2013 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.

-- Quartus II generated Memory Initialization File (.mif)

WIDTH=32;
DEPTH=256;

ADDRESS_RADIX=UNS;
DATA_RADIX=HEX;

CONTENT BEGIN
	0    :   00402083; -- lw x1, 4(zero)	x1 = 1
	1    :   00802103; -- lw x2, 8(zero)	x2 = 2
	2    :   00C02183; -- lw x3, 12(zero)	x3 = 3
	3    :   01002203; -- lw x4, 16(zero)	x4 = -1
	4    :   01E08293; -- addi x5, x1, 30	x5 = 31
	5    :   02102023; -- sw x1, 32(zero)
	6    :   02002083; -- lw x1, 32(zero)
	7    :   00122313; -- slti x6, x4, 1	x6 = 1
	8    :   00123313; -- sltiu x6, x4, 1	x6 = 0
	9    :   03F2C313; -- xori x6, x5, 63	x6 = 32
	10   :   03C2E313; -- ori x6, x5, 60	x6 = 63
	11   :   03C2F313; -- andi x6, x5, 60	x6 = 28
	12   :   00509313; -- slli x6, x1, 5	x6 = 32
	13   :   00F25313; -- srli x6, x4, 15	x6 = 131071 (1FFFF)
	14   :   40F25313; -- srai x6, x4, 15	x6 = -1
	15   :   00408333; -- add x6, x1, x4	x6 = 0
	16   :   00218333; -- add x6, x2, x3	x6 = 5
	17   :   40428333; -- sub x6, x5, x4	x6 = 32
	18   :   00311333; -- sll x6, x2, x3	x6 = 16
	19   :   0040A333; -- slt x6, x1, x4	x6 = 0
	20   :   0040B333; -- sltu x6, x1, x4	x6 = 1
	21   :   00324333; -- xor x6, x4, x3	x6 = -4 (FFFFFFFC)
	22   :   00325333; -- srl x6, x4, x3	x6 = 536870911 (1FFFFFFF)
	23   :   40325333; -- sra x6, x4, x3	x6 = -1
	24   :   0020E333; -- or x6, x1, x2		x6 = 3
	25   :   0020F333; -- and x6, x1, x2	x6 = 0
	26   :   014003EF; -- jal x7, 20		x7 = 108 (6C), pc = 124 (7C) 31
	27   :   02402083; -- lw x1, 36(zero)	x1 = -1
	28   :   02802103; -- lw x2, 40(zero)	x2 = 31
	29   :   02C02183; -- lw x3, 44(zero)	x3 = 0
	30   :   00040467; -- jalr x8, 0(x8)	x8 = 124 (7C), pc = 140 (8C) 35
	31   :   02402223; -- sw x4, 36(zero)
	32   :   02502423; -- sw x5, 40(zero)
	33   :   02602623; -- sw x6, 44(zero)
	34   :   00038467; -- jalr x8, 0(x7)	x8 = 140 (8C), pc = 108 (6C) 27
	35   :   00000000; -- nop, data hazard tests:
	36   :   00402083; -- lw x1, 4(zero)	x1 = 1
	37   :   00802103; -- lw x2, 8(zero)	x2 = 2
	38   :   00C02183; -- lw x3, 12(zero)	x3 = 3
	39   :   002180B3; -- add x1, x3, x2	x1 = 5
	40   :   004080B3; -- add x1, x1, x4	x1 = 4
	41   :   0000A083; -- lw x1, 0(x1)		x1 = 1
	42   :   001080B3; -- add x1, x1, x1	x1 = 2
	43   :   00000000; -- nop, branch tests:
	44   :   000000B3; -- add x1, x0, x0	x1 = 0
	45   :   00500113; -- addi x2, x0, 5	x2 = 5
	46   :   00108093; -- addi x1, x1, 1	x1++ (inside loop)
	47   :   FE209EE3; -- bne x1, x2, -4	PC = 188 (BC) 47
	48   :   00508093; -- addi x1, x1, 5	x1 = 10
	49   :   00000000;
	50   :   00000000;
	51   :   00000000;
	52   :   00000000;
	53   :   00000000;
	54   :   00000000;
	55   :   00000000;
	56   :   00000000;
	57   :   00000000;
	58   :   00000000;
	59   :   00000000;
	[60..255]  :   00000000;
END;
